openapi: 3.0.0
info:
  description: This swagger spec details the content, category and image functionality of
    the United Effects Platform. Copyright 2018 theBoEffect LLC. All rights
    reserved. https://unitedeffects.com
  version: 1.0.0
  title: UE Content Service
  contact:
    email: team@unitedeffects.com
tags:
  - name: logs
    description: Logging endpoints
  - name: Content
    description: CRUD for content
  - name: Images
    description: CRUD for images
  - name: Categories
    description: Data type agnostic category system
paths:
  /logs:
    post:
      tags:
        - logs
      summary: Write a new log to the console and the db
      description: This is unlikely to be used with frequency.
      operationId: writeLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Log"
        description: Log data to be written
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseLog"
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
    get:
      tags:
        - logs
      summary: Retrieve all logs in the system
      description: ""
      operationId: getLogs
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Logs"
        "401":
          description: Unauthorized
      security:
        - UEAuth:
            []
  "/logs/{code}":
    get:
      tags:
        - logs
      summary: Find all logs with one type of code.
      description: Codes should be "error", "notify", or "success"
      operationId: getLogByCode
      parameters:
        - name: code
          in: path
          description: code of log types to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Logs"
        "400":
          description: Invalid code supplied
        "401":
          description: Unauthorized
      security:
        - UEAuth:
            []
  "/logs/{code}/{timestamp}":
    get:
      tags:
        - logs
      summary: Find a log with code and timestamp specified
      description: Codes should be "error", "notify", or "success".
      operationId: getLog
      parameters:
        - name: code
          in: path
          description: code of log type to return
          required: true
          schema:
            type: string
        - name: timestamp
          in: path
          description: timestamp of log type to return
          required: true
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseLog"
        "400":
          description: Invalid code supplied
        "401":
          description: Unauthorized
        "404":
          description: Log not found
      security:
        - UEAuth:
            []
  /content:
    post:
      tags:
        - Content
      summary: Add a new content entry
      description: Add a new content entry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/contentCreate"
        description: new content to be added
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/singleResponseContent"
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
    get:
      tags:
        - Content
      summary: Get All content entrys
      description: Get All content entrys
      parameters:
        - name: tag
          in: query
          required: false
          description: optional filter on tag value
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/content/public/{slug}":
    get:
      tags:
        - Content
      summary: Public access - Get a content entry by slug
      description: Public access - Get a content entry by slug
      parameters:
        - name: slug
          in: path
          required: true
          description: slug of content to retrieve
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/content/{id}":
    get:
      tags:
        - Content
      summary: Get a content entry
      description: Get a content entry
      parameters:
        - name: id
          in: path
          required: true
          description: Id or Slug of content to retrieve
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
    patch:
      tags:
        - Content
      summary: Edit a content entry
      description: Edit a content entry
      parameters:
        - name: id
          in: path
          required: true
          description: Id of content to retrieve
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/contentPatchObject"
        description: updates to content. Any of the following.
        required: true
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
    delete:
      tags:
        - Content
      summary: Delete a content entry (hard delete)
      description: Delete a content (hard delete)
      parameters:
        - name: id
          in: path
          required: true
          description: Id of content to delete
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/content/{id}/category":
    put:
      tags:
        - Content
      summary: add a category to a content entry
      description: add a category to a content entry
      parameters:
        - name: id
          in: path
          required: true
          description: Id of content to retrieve
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/categoryAddObject"
        description: updates to content. Any of the following.
        required: true
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/content/{id}/category/{name}":
    patch:
      tags:
        - Content
      summary: remove a category to a content entry
      description: remove a category to a content entry
      parameters:
        - name: id
          in: path
          required: true
          description: Id of content entry to retrieve
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the category to remove from issue
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/content/{id}/categories":
    get:
      tags:
        - Content
      summary: Get a content entry categories
      description: Get a content entry categories
      parameters:
        - name: id
          in: path
          required: true
          description: Id of content entry categories to retrieve
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/content/category/{name}":
    get:
      tags:
        - Content
      summary: Get content entrys by category
      description: Get content entrys by category
      parameters:
        - name: name
          in: path
          required: true
          description: name of category to filter
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  /content/search:
    get:
      tags:
        - Content
      summary: Search for content
      description: Search for content
      parameters:
        - name: q
          in: query
          required: true
          description: String to define what you are looking for
          schema:
            type: string
        - name: active
          in: query
          required: false
          description: Whether or not you want active or inactive records returned
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  /categories/search:
    get:
      tags:
        - Categories
      summary: Search for categories
      description: Search for categories
      parameters:
        - name: q
          in: query
          required: true
          description: String to define what you are looking for
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  /category:
    post:
      tags:
        - Categories
      summary: Add a new category
      description: Add a new category
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/categoryObject"
        description: new category to be added
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categoryResponse"
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  /categories:
    get:
      tags:
        - Categories
      summary: Get All categories
      description: Get All categories
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/category/{id}":
    get:
      tags:
        - Categories
      summary: Get a category
      description: Get a category
      parameters:
        - name: id
          in: path
          required: true
          description: Id of category to retrieve
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categoryResponse"
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
    delete:
      tags:
        - Categories
      summary: Delete a category (hard delete)
      description: Delete a category (hard delete)
      parameters:
        - name: id
          in: path
          required: true
          description: Id of category to delete
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/category/name/{name}":
    get:
      tags:
        - Categories
      summary: Get a category by name
      description: Get a category by name
      parameters:
        - name: name
          in: path
          required: true
          description: name of category to retrieve
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  /image:
    post:
      tags:
        - Images
      summary: Add a new imgage
      description: Add a new image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                name:
                  type: string
                description:
                  type: string
                product:
                  description: product to correlate image to
                  type: string
                domain:
                  description: domain to correlate image to
                  type: string
                tag:
                  type: string
              required:
                - file
                - name
                - description
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/image/{id}":
    get:
      tags:
        - Images
      summary: Get an image data
      description: Get an image data
      parameters:
        - name: id
          in: path
          required: true
          description: id of image to retrieve
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
    patch:
      tags:
        - Images
      summary: Update an imgage data
      description: Update an image data
      parameters:
        - name: id
          in: path
          required: true
          description: id of image to retrieve
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/imageObject"
        description: new image data to be added
        required: true
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
    delete:
      tags:
        - Images
      summary: Delete an image entry - Warning, this will break dependecies
      description: Delerte an image entry - Warning, this will break dependecies
      parameters:
        - name: id
          in: path
          required: true
          description: id of image to delete
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  /images:
    get:
      tags:
        - Images
      summary: PUBLIC - Get all images
      description: PUBLIC - Get all images
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/img/{slug}":
    get:
      tags:
        - Images
      summary: Proxy to an image directly
      description: Proxy to an image directly
      parameters:
        - name: slug
          in: path
          required: true
          description: id of image to retrieve
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  /images/search:
    get:
      tags:
        - Images
      summary: Search for Images
      description: Search for Images
      parameters:
        - name: q
          in: query
          required: true
          description: String to define what you are looking for
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/image/{id}/category":
    put:
      tags:
        - Images
      summary: Add a category to an image entry
      description: Add a category to an image entry
      parameters:
        - name: id
          in: path
          required: true
          description: Id of image to retrieve
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/categoryAddObject"
        description: Category to add to the image
        required: true
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/image/{id}/category/{name}":
    patch:
      tags:
        - Images
      summary: Remove a category from an Image entry
      description: Remove a category from an Image entry
      parameters:
        - name: id
          in: path
          required: true
          description: Id of image entry to retrieve
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the category to remove from issue
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/image/{id}/categories":
    get:
      tags:
        - Images
      summary: Get an image entry categories
      description: Get an image entry categories
      parameters:
        - name: id
          in: path
          required: true
          description: Id of image entry categories to retrieve
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
  "/images/category/{name}":
    get:
      tags:
        - Images
      summary: Get image entrys by category
      description: Get image entrys by category
      parameters:
        - name: name
          in: path
          required: true
          description: name of category to filter
          schema:
            type: string
      responses:
        "200":
          description: successful operation
        "401":
          description: Unauthorized
        "405":
          description: Invalid input
        "500":
          description: Unknown error
      security:
        - UEAuth:
            []
externalDocs:
  description: Secured by ueauth.io
  url: https://ueauth.io
servers:
  - url: http://localhost:3010/api
  - url: https://localhost:3010/api
components:
  securitySchemes:
    UEAuth:
      type: apiKey
      name: Authorization
      in: header
      description: For both UEAuth and other Bearer based tokens, type in "Bearer "
        followed by your Token.
  schemas:
    Log:
      type: object
      required:
        - logCode
        - logTimestamp
      properties:
        logCode:
          type: string
          description: This is your hashKey. This should only be ERROR, NOTIFY, or SUCCESS
        logTimestamp:
          type: string
          format: date-time
          description: This is your rangeKey. This is a timestamp.
        message:
          type: string
          description: This should be any brief summary data in string format.
        details:
          type: object
          description: You can directly pipe any error message objects to here.
    ApiResponseLog:
      properties:
        type:
          type: string
          enum:
            - Log
        data:
          $ref: "#/components/schemas/Log"
    Logs:
      properties:
        type:
          type: string
          enum:
            - Log
        data:
          type: array
          items:
            $ref: "#/components/schemas/Log"
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        data:
          type: string
    contentPatchObject:
      properties:
        title:
          type: string
        content:
          type: string
        product:
          type: string
        domain:
          type: string
        tag:
          type: string
        active:
          type: boolean
          default: true
        internal_description:
          type: string
        auth_required:
          type: boolean
          default: false
    contentCreate:
      required:
        - owner
        - title
        - product
        - domain
        - content
      additionalProperties: false
      properties:
        owner:
          type: string
          description: owner user id
        title:
          type: string
          description: brief title to identify the content
        product:
          type: string
          description: a product identifier to manage content
        domain:
          type: string
          description: a domain (within product) identifier to manage content
        labels:
          type: array
          description: descriptive labels/tags
          items:
            type: string
        content:
          type: string
          description: your actual content - could be anything as long as it passes as a string
        published:
          type: boolean
          description: if true, only owner can view
        authRequired:
          type: boolean,
          description: if true, only logged in users can view, otherwise it is public to the internet
        internalDescription:
          type: string
          description: verbose description of the content
    singleResponseContent:
      properties:
        type:
          type: string
          enum: ['Content']
        data:
          $ref: "#/components/schemas/contentObject"
    contentObject:
      required:
        - owner
        - title
        - product
        - domain
        - content
      properties:
        created:
          type: string
          format: date-time
        guid:
          type: string
          description: unique id - auto generated
        owner:
          type: string
          description: owner user id
        title:
          type: string
          description: brief title to identify the content
        slug:
          type: string
          description: verbose identifier for query - auto generated
        product:
          type: string
          description: a product identifier to manage content
        domain:
          type: string
          description: a domain (within product) identifier to manage content
        labels:
          type: array
          description: descriptive labels/tags
          items:
            type: string
        content:
          type: string
          description: your actual content - could be anything as long as it passes as a string
        published:
          type: boolean
          description: if true, only owner can view
        authRequired:
          type: boolean,
          description: if true, only logged in users can view, otherwise it is public to the internet
        internalDescription:
          type: string
          description: verbose description of the content
    categoryObject:
      properties:
        name:
          type: string
        type:
          type: string
          default: Content
        description:
          type: string
    categoryResponse:
      properties:
        name:
          type: string
        pretty_name:
          type: string
        type:
          type: string
          default: Content
        description:
          type: string
    categoryAddObject:
      properties:
        name:
          type: string
        id:
          type: string
    imageObject:
      properties:
        name:
          type: string
        description:
          type: string
        product:
          type: string
        domain:
          type: string
        url:
          type: string
        slug:
          type: string
        tags:
          type: array
          items:
            type: string